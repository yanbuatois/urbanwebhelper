{"version":3,"sources":["../routes/users.js"],"names":["express","require","router","res","items","req","id","presetID","console","error","err","module"],"mappings":";;AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAvB,SAAuB,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAAtB,MAAeA,EAAf;AAEA;;AACAE,MAAM,CAANA,GAAAA,CAAAA,GAAAA,EAAgB,UAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAyB;AACvCC,EAAAA,GAAG,CAAHA,QAAAA,CAAAA,GAAAA;AADFD,CAAAA,E,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAANA,GAAAA,CAAAA,eAAAA,EAA4B,OAAA,GAAA,EAAA,GAAA,EAAA,IAAA,KAA0B;AACpD,MAAI;AACF;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAY,MAAMC,GAAG,CAAHA,KAAAA,CAAAA,KAAAA,CAFtB,wBAEsBA,CAAxB,CAFE,CAGF;AACA;;AACA,UAAM,OAAO,CAAP,GAAA,CAAY,KAAK,CAAL,GAAA,CAAU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAY,GAAG,CAAH,KAAA,CAAA,KAAA,CAAA,+BAAA,EAAiD;AAAEC,MAAAA,QAAQ,EAAED;AAAZ,KAAjD,CAAtB,CAAZ,CAAN;AACAH,IAAAA,GAAG,CAAHA,QAAAA,CAAAA,QAAAA;AANF,GAAA,CAOE,OAAA,GAAA,EAAY;AACZK,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,GAAAA;AACAL,IAAAA,GAAG,CAAHA,MAAAA,CAAAA,cAAAA,EAA2B;AAAEM,MAAAA,KAAK,EAAEC;AAAT,KAA3BP;AACD;AAXHD,CAAAA;AAcAS,MAAM,CAANA,OAAAA,GAAAA,MAAAA","sourcesContent":["const express = require('express');\nconst router = express.Router();\n\n/* GET users listing. */\nrouter.get('/', function(req, res, next) {\n  res.redirect('/');\n});\n\n// router.get('/clearpresets', (req, res, next) => {\n//   // J'envoie la requête d'API pour avoir la liste des presets\n//   req.urApi.query(\"collections.getPresets\")\n//     .then(({items}) => {\n//       // Lorsque je la reçois, je fais une requête pour supprimer chaque preset.\n//       const promesses = items.map(({id}) => req.urApi.query(\"collections.deleteSavedPreset\", {presetID: id}));\n//       // J'attends que les promesses se soient toutes exécutées.\n//       Promise.all(promesses)\n//         .then((infos) => {\n//           res.redirect('/user/');\n//         })\n//         .catch((err) => {\n//           console.log(err);\n//           res.render('errors/error', {error: err});\n//         });\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//       res.render('errors/error', {error: err});\n//     });\n// })\n\nrouter.get('/clearpresets', async (req, res, next) => {\n  try {\n    // J'envoie la requête d'API pour avoir la liste des presets\n    const { items } = await req.urApi.query(\"collections.getPresets\");\n    // Lorsque je la reçois, je fais une requête pour supprimer chaque preset.\n    // J'attends que les promesses se soient toutes exécutées.\n    await Promise.all(items.map(({ id }) => req.urApi.query(\"collections.deleteSavedPreset\", { presetID: id })));\n    res.redirect('/user/');\n  } catch (err) {\n    console.log(err);\n    res.render('errors/error', { error: err });\n  }\n});\n\nmodule.exports = router;\n"],"file":"users.js"}